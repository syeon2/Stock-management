version: "3"
services:
  # MySQL Replication
  db-master:
    build:
      context: ./mysql/master
      dockerfile: Dockerfile
    restart: always
    environment:
      MYSQL_DATABASE: 'stockmanagement'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    volumes:
      - my-db-master:/var/lib/mysql
      - my-db-master:/var/lib/mysql-files
    networks:
      - net-mysql

  db-slave:
    build:
      context: ./mysql/slave
      dockerfile: Dockerfile
    restart: always
    environment:
      MYSQL_DATABASE: 'stockmanagement'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3307:3306'
    volumes:
      - my-db-slave:/var/lib/mysql
      - my-db-slave:/var/lib/mysql-files
    networks:
      - net-mysql

  db-test:
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'teststockmanagement'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3308:3306'

  # Redis-cluster
  node1:
    container_name: node1
    image: redis
    volumes:
      - ./redis/conf1:/usr/local/etc/redis/
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - 7000:7000
      - 7001:7001
      - 7002:7002
      - 7003:7003
      - 7004:7004
      - 7005:7005

  node2:
    network_mode: "service:node1"
    container_name: node2
    image: redis
    volumes:
      - ./redis/conf2:/usr/local/etc/redis/
    command: redis-server /usr/local/etc/redis/redis.conf

  node3:
    network_mode: "service:node1"
    container_name: node3
    image: redis
    volumes:
      - ./redis/conf3:/usr/local/etc/redis/
    command: redis-server /usr/local/etc/redis/redis.conf

  node4:
    network_mode: "service:node1"
    container_name: node4
    image: redis
    volumes:
      - ./redis/conf4:/usr/local/etc/redis/
    command: redis-server /usr/local/etc/redis/redis.conf

  node5:
    network_mode: "service:node1"
    container_name: node5
    image: redis
    volumes:
      - ./redis/conf5:/usr/local/etc/redis/
    command: redis-server /usr/local/etc/redis/redis.conf

  node6:
    network_mode: "service:node1"
    container_name: node6
    image: redis
    volumes:
      - ./redis/conf6:/usr/local/etc/redis/
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-cluster-entry:
    network_mode: "service:node1"
    image: redis
    container_name: redis-cluster
    command: redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1 --cluster-yes
    depends_on:
      - node1
      - node2
      - node3
      - node4
      - node5
      - node6

volumes:
  my-db-master:
  my-db-slave:

networks:
  net-mysql:
    driver: bridge
